name: Create Tag and Release changelog superrelease

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the new release'
        required: true

permissions:
  contents: write
  packages: write
  pull-requests: write
  
jobs:
  fetch-tag:
    runs-on: ubuntu-latest
    outputs:
      old_tag: ${{ steps.get_tag.outputs.old_tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      
      - name: Get latest tag
        id: get_tag
        run: |
          echo "old_tag_name=$(git ls-remote --tags origin | awk -F'/' '{print $3}' | grep -v '{}' | sort -V | tail -n1)" >> $GITHUB_OUTPUT
  
      - name: print tag
        id: print_tag
        run: | 
          echo "Old Tag=${{ steps.get_tag.outputs.old_tag_name }}"
          echo "NEW_TAG=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
          echo "$(basename ${{ github.ref }})"
      
      - name: Check if new tag already exists
        id: check_tag
        run: |
          if git rev-parse ${{ env.NEW_TAG }} >/dev/null 2>&1; then
            echo "Error: Tag '${{ env.NEW_TAG }}' already exists."
            exit 1
          fi
        continue-on-error: false
        shell: bash
      - name: Handle Failure
        if: failure()
        run: |
          exit 1
          echo "Tag already exists. Workflow failed."

  update-params-env:
    runs-on: ubuntu-latest
    needs: fetch-tag
    outputs:
      param_env: ${{ steps.read_params_env.outputs.params_env }}
      old_release_tag: ${{ needs.fetch-tag.outputs.old_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
           
      - name: Read params.env
        id: read_params_env
        run: |
          echo "params_env=$(cat config/overlays/odh/params.env)" >> $GITHUB_ENV
              
      - name: Update params.env with new release version
        run: |     
          sed -i 's|:v[0-9.]*\b|:${{ github.event.inputs.tag_name }}|gm' config/overlays/odh/params.env
      - name: Commit changes
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add config/overlays/odh/params.env
          git commit -m "Update image refs for odh release."
          git push 
      - name: Create Tag
        id: create_tag
        run: |
          git tag -a ${{ github.event.inputs.tag_name }} -m "Prepare for ODH release ${{ github.event.inputs.tag_name }}"
          git push origin ${{ github.event.inputs.tag_name }}

  changelog:
    name: Changelog
    needs: [fetch-tag,update-params-env]
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.generate_changelog.outputs.changelog }}
    env:
      old_tag: ${{ needs.fetch-tag.outputs.old_tag }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Generate Changelog
        id: generate_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          fromTag: ${{ needs.fetch-tag.outputs.old_tag }}
          toTag:  ${{ github.event.inputs.tag_name }}
          token: ${{ github.token }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ github.token }}
          tag_name: ${{ github.event.inputs.tag_name }}
          prerelease: false
          draft: false
          files: bin/*
          generate_release_notes: false
          name: ${{ github.event.inputs.tag_name }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
